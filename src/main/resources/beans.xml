<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task-4.1.xsd">
    <!--<context:annotation-config/>-->
    <!--<context:component-scan base-package="com.qrj"/>-->

    <!--定时器-->
    <task:executor id="executor" pool-size="5"/>
    <task:scheduler id="scheduler" pool-size="10"/>
    <task:annotation-driven executor="executor" scheduler="scheduler"/>

    <!-- 初始化配置文件 -->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties" />
    </bean>

    <bean id="dataSource" init-method="init" destroy-method="close" class="com.alibaba.druid.pool.DruidDataSource">
        <!--<property name="driverClassName"-->
                  <!--value="${jdbc.driverClassName}"/>-->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="2"/>
        <property name="maxActive" value="60"/>
        <property name="minIdle" value="0"/>
        <property name="maxWait" value="60000"/>
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
    </bean>

    <!--<bean id="sf"-->
          <!--class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="packagesToScan">-->
            <!--<list>-->
                <!--<value>com.qrj.banche.model</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.dialect">-->
                    <!--org.hibernate.dialect.MySQLDialect-->
                <!--</prop>-->
                <!--<prop key="hibernate.show_sql">true</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="txManager"-->
          <!--class="org.springframework.orm.hibernate4.HibernateTransactionManager">-->
        <!--<property name="sessionFactory" ref="sf"/>-->
    <!--</bean>-->


    <!--<aop:config>-->
        <!--<aop:pointcut id="bussinessService"-->
                      <!--expression="execution(public * com.qrj.banche.dao.*.*(..))"/>-->
        <!--<aop:advisor pointcut-ref="bussinessService"-->
                     <!--advice-ref="txAdvice"/>-->
    <!--</aop:config>-->

    <!--<tx:advice id="txAdvice" transaction-manager="txManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="delete" propagation="REQUIRED"/>-->
            <!--<tx:method name="save" propagation="REQUIRED"/>-->
            <!--<tx:method name="saveOrUpdate" propagation="REQUIRED"/>-->
            <!--<tx:method name="update" propagation="REQUIRED"/>-->
            <!--<tx:method name="get" propagation="REQUIRED"/>-->
            <!--<tx:method name="get*" propagation="REQUIRED"/>-->
            <!--<tx:method name="find*" propagation="REQUIRED"/>-->
            <!--<tx:method name="find" propagation="REQUIRED"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--mybatis配置-->
    <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--自动扫描entity目录，省略掉Configuration.xml的配置-->
        <property name="mapperLocations" value="classpath:/com/qrj/banche/mapping/*.xml"/>
    </bean>

    <!-- 扫描dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.qrj.banche.repository"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--使用注解方式配置事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <context:component-scan base-package="com.qrj.banche,com.qrj.weixin"/>




</beans>